fn main {

    $page = Page.create({
        title: 'Ajax Example',

        css: [url'/vendor/basic.css'],
        js: ajaxJs(),
    })

    $html = mainHtml()
    $page.setMain($html)

    $page.send()
}

tm mainHtml {

    <h1> Ajax Example

    --- foreach weatherJcon() as $location, $weather {
        <button ajax="/examples/ajax-weather | location={{ $location }} | #results"> {{ $weather.city }}
    --- }

    <.panel id="results" style="margin-top: 2rem"></>
}

// Try adding your own city!
tm weatherJcon {
    {
        sanJose: {
            city: San Jose, USA
            temp: Nice & Warm
            chanceRain: Very Low
        }

        helsinki: {
            city: Helsinki, Finland
            temp: Cold & Freezing
            chanceRain: Medium
        }

        lima: {
            city: Lima, Peru
            temp: Hot & Humid
            chanceRain: Very High
        }
    }
}

// Handler for ajax request
fn mainGetWeather {

    $location = Input.post('location')

    $weather = weatherJcon()

    $city = $weather[$location]
    $html = responseHtml($city)

    return { html: $html.renderString() }
}

tm responseHtml($city) {

    <p> Temperature: <b>{{ $city.temp }}</b>
    <p> Chance of Rain: <b>{{ $city.chanceRain }}</b>
}

tm pageJs {

    let panel = document.querySelector('.panel');

    document.addEventListener('click', onClickCity);

    function onClickCity(ev) {

        let location = ev.target.getAttribute('data-location');
        if (location) {
            panel.innerHTML = 'Loading...';

            ajaxFetch('/examples/ajax-weather', {
                location: location,
                main: 'getWeather',
                csrfToken: {{ Web.csrfToken() }},
            });
        }
    }

    async function ajaxFetch(url, data) {

        let response = await fetch(url, {
            method: 'POST',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        });

        response.json().then(onResponse);
    }

    function onResponse(responseData) {
        panel.innerHTML = responseData.html;
    }
}

tm ajaxJs {

    document.addEventListener('click', onClick);

    function el(css) {
        return document.querySelector(css);
    }

    function onClick(ev) {

        let conf = ctx.e.getAttribute('ajax');
        if (!conf) { return; }

        let parts = conf.split(/\s*\|\s*/);

        let ctx = {
            e: ev.target,
            url: parts.shift(),
            data: parts.shift(),
            target: el(parts.shift()),
        };

        this.loading(ctx.e);
        this.loading(ctx.target);

        ajaxFetch(ctx.url, {
            location: location,
            main: 'getWeather',
            csrfToken: {{ Web.csrfToken() }},
        });

    }

    function loading(el, onOff) {
        let cl = 'ajax-loading';
        el.classList.toggle(cl, onOff);
    }

    async function ajaxFetch(url, data) {

        let response = await fetch(url, {
            method: 'POST',
            headers: {
              'Accept': 'text/html',
              'Content-Type': 'text/html',
            },
            body: JSON.stringify(data),
        });

        response.text().then(onResponse);
    }

    function onResponse(responseData) {
        panel.innerHTML = responseData;
    }
}