{"AppConfig":{"get":"AppConfig.get($key, $default='') -> any","getBoolean":"AppConfig.getBoolean($key, $default=false) -> boolean","getNumber":"AppConfig.getNumber($key, $default=0) -> number"},"Boolean":{"toNumber":"toNumber()","toString":"toString()"},"Cache":{"delete":"Cache.delete($key) -> self","deleteAll":"Cache.deleteAll() -> self","get":"Cache.get($key, $default='', $duration='1 hour') -> any","getDriver":"Cache.getDriver() -> string","has":"Cache.has($key) -> boolean","set":"Cache.set($key, $value, $duration) -> self"},"Cookie":{"delete":"Cookie.delete($key) -> null","get":"Cookie.get($key) -> any","set":"Cookie.set($key, $value) -> null"},"Date":{"add":"$date.add($durationString) -> Date","create":"Date.create($string|$map|$unixTime) -> Date","dateOnly":"$date.dateOnly() -> Date","daysInMonth":"Date.daysInMonth($date='now') -> number","diff":"$date.diff($fromDate='now', $unit='seconds') -> number","diffHuman":"$date.diffHuman($fromDate='now') -> string","diffToSeconds":"Date.diffToSeconds($duration) -> number","equals":"$date.equals($otherDate) -> boolean","format":"Date.format($format='iso8601') -> string","get":"$date.get($field) -> number|string","getTimezone":"$date.getTimezone() -> string","isAfter":"$date.isAfter($otherDate) -> boolean","isAfterOrEqual":"$date.isAfterOrEqual($otherDate) -> boolean","isBefore":"$date.isBefore($otherDate) -> boolean","isBeforeOrEqual":"$date.isBeforeOrEqual($otherDate) -> boolean","isDst":"$date.isDst() -> boolean","isFuture":"$date.isFuture() -> boolean","isPast":"$date.isPast() -> boolean","monthList":"Date.monthList($flags={}) -> list","now":"Date.now() -> Date","sandwich":"Date.sandwich() -> Date","set":"$date.set($field, $value) -> Date","setDate":"$date.setDate($year, $month, $day) -> Date","setLocale":"Date.setLocale($localeName) -> null","setTime":"$date.setTime($hour, $min, $sec=0) -> Date","setTimezone":"$date.setTimezone($timezoneName) -> null","toMap":"$date.toMap() -> map","today":"Date.today() -> Date","unixTime":"$date.unixTime() -> number"},"Db":{"countRows":"Db.countRows($table, $whereMapOrSql) -> number","createIndex":"Db.createIndex($tableName, $colName) -> boolean","createTable":"Db.createTable($tableName, $colMap) -> boolean","deleteRow":"Db.deleteRow($table, $whereMapOrSql) -> null","deleteRows":"Db.deleteRows($table, $whereMapOrSql) -> null","getColumns":"Db.getColumns($tableName) -> list","getDatabases":"Db.getDatabases() -> list","getTables":"Db.getTables() -> list","insertRow":"Db.insertRow($table, $rowMap) -> null","lastInsertId":"Db.lastInsertId($sequenceName='') -> number","runQuery":"Db.runQuery($sql) -> object","selectRow":"Db.selectRow($sql, $whereMap={}) -> map","selectRows":"Db.selectRows($sql, $whereMap={}) -> list","tableExists":"Db.tableExists($tableName) -> boolean","updateRow":"Db.updateRow($table, $colMap, $whereMapOrSql) -> null","updateRows":"Db.updateRows($table, $colMap, $where) -> null","useDatabase":"Db.useDatabase($databaseId) -> object","xDangerDeleteAllRows":"Db.xDangerDeleteAllRows($tableName) -> number","xDangerDropTable":"Db.xDangerDropTable($tableName) -> boolean"},"Email":{"lastLogs":"Email.lastLogs() -> map","send":"Email.send($message) -> boolean"},"File":{"append":"$file.append($dataListOrString) -> self","appendPath":"$dir.appendPath($relPath) -> $newPath","copy":"$file.copy($toPath, $options={}) -> $toPath","copyDir":"$dir.copyDir($toDir) -> null","countLines":"$file.countLines($options={}) -> number","delete":"$file.delete($options) -> self","deleteDir":"$dir.deleteDir($options={}) -> null","exists":"$path.exists() -> boolean","extensionToMimeType":"File.extensionToMimeType($fileExtension) -> string","getDate":"$path.getDate() -> Map<Date>","getMimeType":"$file.getMimeType() -> string","getPerms":"$path.getPerms() -> map","getSize":"$file.getSize($units='B', $options={}) -> number","hasRootDir":"$path.hasRootDir($rootDir) -> boolean","isAbsolute":"$path.isAbsolute() -> boolean","isDir":"$path.isDir() -> boolean","isFile":"$path.isFile() -> boolean","isRelative":"$path.isRelative() -> boolean","loopDir":"$dir.loopDir($loopFunction, $options={}) -> null","makeDir":"$dir.makeDir($permissions='775') -> null","mimeTypeToExtension":"File.mimeTypeToExtension($mimeType) -> string","move":"$file.move($toPath, $options={}) -> $toPath","moveDir":"$dirPath.moveDir($toDirPath) -> null","parentDir":"$path.parentDir() -> Dir|null","pathParts":"$path.pathParts() -> Map","read":"$file.read($options={}) -> list|string","readDir":"$dir.readDir($options={}) -> list","readEachLine":"$file.readEachLine($lineFunction, $options={}) -> any","setDate":"$path.setDate($date=now, $dateKey='both') -> self","toUrl":"$file.toUrl() -> $urlTypeString","withFileBase":"$file.withFileBase($newFileBase) -> $newPath","withFileExt":"$file.withFileExt($newExtension) -> $newPath","withFileName":"$file.withFileBase($withFileName) -> $newPath","write":"$file.write($dataListOrString, $options) -> self"},"Form":{"allTags":"$form.allTags() -> HtmlString","bareTag":"$form.tag($fieldName, $htmlAttributes={}) -> HtmlString","close":"$form.close() -> HtmlString","create":"Form.create($formId, $formFields) -> object","csrfTag":"Form.csrfTag() -> HtmlString","getConfig":"$form.getConfig() -> map","getFormId":"$form.getFormId() -> string","getSubmittedFormId":"Form.getSubmittedFormId() -> string","open":"$form.open($htmlAttributes={}) -> HtmlString","process":"$form.process($processFunction) -> null","setHelpStrings":"Form.setHelpStrings($stringMap) -> null","setValues":"$form.setValues($mapOfValues) -> null","submitTag":"$form.submitTag($submitLabel, $htmlAttributes={}) -> HtmlString","tag":"$form.tag($fieldName, $htmlAttributes={}) -> HtmlString","toHtml":"$form.toHtml($submitButtonLabel, $htmlAttributes={}) -> HtmlString"},"Input":{"fieldNames":"Input.fieldNames($method) -> list","get":"Input.get($fieldName, $ruleset='id') -> any","getAll":"$data.getAll($fieldsRulesMap) -> map","getUploadError":"Input.getUploadError() -> string","hasField":"Input.hasField($method, $fieldName) -> boolean","post":"Input.post($fieldName, $ruleset='id') -> any","postAll":"$data.postAll($fieldsRulesMap) -> map","printAll":"Input.printAll() -> null","route":"Input.route($paramName, $ruleset='id') -> any","uploadedFile":"Input.uploadedFile($fieldName, $uploadDir, $allowedExtensions, $maxFileSizeMb=0) -> Result","uploadedImage":"Input.uploadedImage($fieldName, $uploadDir, $size='500x500', $options={}) -> string","validateValue":"Input.validateValue($value, $rule) -> map","xDangerRawData":"Input.xDangerRawData($method) -> map"},"Jcon":{"fileExists":"Jcon.fileExists($filePath) -> boolean","parse":"Jcon.parse($text) -> map|list","parseFile":"Jcon.parseFile($filePath) -> map|list"},"Json":{"decode":"Json.decode($jsonTypeString) -> map|list","encode":"Json.encode($data) -> JsonTypeString","format":"Json.format($mapOrJson, $options={}) -> string","validate":"Json.validate($jsonTypeString) -> boolean"},"List":{"all":"all($callbackFunction) -> boolean","any":"any($callbackFunction) -> boolean","contains":"contains($item) -> boolean","containsAll":"containsAll($otherList) -> boolean","containsAny":"containsAny($otherList) -> boolean","copy":"copy($options={}) -> list","countBy":"countBy($callbackFunction) -> map","default":"default($value) -> self","filter":"filter($callbackFunction) -> list","first":"first($numItems=1) -> any","flat":"flat($depth=1) -> list","getColumn":"getColumn($columnKey, $indexKey='') -> list|map","groupBy":"groupBy($callbackFunction) -> map","hasIndex":"hasIndex($index) -> boolean","indexBy":"indexBy($callbackFunction) -> map","indexOf":"indexOf($value) -> number","insert":"insert($index, $item) -> self","insertAll":"insertAll($index, $otherList) -> self","join":"join($delimiter='') -> string","last":"last($numItems=1) -> any","lastIndexOf":"lastIndexOf($value) -> number","length":"length() -> number","map":"map($callbackFunction) -> list","pop":"pop() -> any","popFirst":"popFirst() -> any","push":"push($item) -> self","pushAll":"pushAll($anotherList) -> self","pushFirst":"pushFirst($item) -> self","random":"random($numItems=1) -> any|list","reduce":"reduce($callbackFunction, $startValue=none) -> any","remove":"remove($index, $numItems=1) -> any","repeat":"repeat($itemValue, $numItems) -> self","reverse":"reverse() -> self","shuffle":"shuffle() -> list","slice":"slice($index, $numItems=0) -> list","sort":"sort($functionOrOptions={}) -> self","sortByColumn":"sortByColumn($columnKey, $options={}) -> self","swap":"swap($index1, $index2) -> self","toMap":"toMap($keys=auto) -> map","toSet":"toSet() -> map","unique":"unique() -> list"},"Litemark":{"parse":"Litemark.parse($text, $options={}) -> HtmlString","parseFile":"Litemark.parse($filePath, $options={}) -> HtmlString"},"Log":{"debug":"debug($stringOrMap) -> self","error":"error($stringOrMap) -> self","fatal":"fatal($stringOrMap) -> self","getFile":"getFile() -> FileTypeString","info":"info($stringOrMap) -> self","trace":"trace($stringOrMap) -> self","warn":"warn($stringOrMap) -> self"},"Map":{"clear":"clear() -> self","copy":"copy($options={}) -> map","default":"default($value) -> self","hasKey":"hasKey($key) -> boolean","hasValue":"hasValue($value) -> boolean","keys":"keys() -> list","keysForValue":"keysForValue($value) -> list","length":"length() -> number","merge":"merge($otherMap, $options={}) -> map","remove":"remove($key) -> any","renameKey":"renameKey($oldKey, $newKey) -> self","reverse":"reverse() -> map","slice":"slice($listOfKeys) -> map","values":"values() -> list"},"Math":{"acos":"Math.acos($n) -> number","asin":"Math.asin($n) -> number","atan":"Math.atan($n) -> number","atan2":"Math.atan2($x, $y) -> number","convertBase":"Math.convertBase($n, $fromBase, $toBase) -> number|string","cos":"Math.cos($n) -> number","decToHex":"Math.decToHex($number) -> string","degToRad":"Math.degToRad($n) -> number","exp":"Math.exp($n) -> number","hexToDec":"Math.hexToDec($hexString) -> number","log":"Math.log($n, $base=E) -> number","max":"Math.max($listOfNumbers) -> number","min":"Math.min($listOfNumbers) -> number","pi":"Math.pi() -> number","pow":"Math.pow($base, $exp) -> number","product":"Math.product($listOfNumbers) -> number","radToDeg":"Math.radToDeg($n) -> number","random":"Math.random($min, $max) -> number","range":"Math.range($start, $end, $step=1) -> list","sin":"Math.sin($n) -> number","sqrt":"Math.sqrt($n) -> number","sum":"Math.sum($listOfNumbers) -> number","tan":"Math.tan($n) -> number","whoa":"Math.whoa($n) -> number","zFloatMax":"Math.zFloatMax() -> number","zFloatMin":"Math.zFloatMin() -> number","zIntMax":"Math.zIntMax() -> number","zIntMin":"Math.zIntMin() -> number"},"Net":{"httpGet":"Net.httpGet($url, $headers={}) -> string|map","httpHead":"Net.httpHead($url, $requestHeaders={}) -> map","httpPost":"Net.httpPost($url, $postData, $headers={}) -> string|map","httpRequest":"Net.httpRequest($method, $url, $data='', $headers={}) -> string|map","httpStatus":"Net.httpStatus($url, $headers={}) -> number","lastError":"Net.lastError() -> string","setTimeoutSecs":"Net.setTimeoutSecs($timeoutSecs) -> bool"},"Number":{"absolute":"absolute() -> number","ceiling":"ceiling($precision = 0) -> number","clamp":"clamp($min, $max) -> number","clampMax":"clampMax($max) -> number","clampMin":"clampMin($min) -> number","floor":"floor($precision = 0) -> number","format":"format($options={}) -> string","fromBytesTo":"fromBytesTo($unit) -> number","humanizeCount":"humanizeCount() -> string","inRange":"inRange($min, $max) -> boolean","isEven":"isEven() -> boolean","isFloat":"isFloat() -> boolean","isInt":"isInt() -> boolean","isMultipleOf":"isMultipleOf($otherNum) -> boolean","isOdd":"isOdd() -> boolean","round":"round($numDecDigits=0, $options={}) -> number","roundToStep":"roundToStep($stepInterval) -> number","sign":"sign() -> number","toBoolean":"toBoolean() -> boolean","toFloat":"toFloat() -> number","toInt":"toInt() -> number","toRoman":"toRoman() -> string","toString":"toString() -> string","zeroPadLeft":"zeroPadLeft($numDigits) -> string","zeroPadRight":"zeroPadRight($numDecimalDigits) -> string"},"Output":{"redirect":"Output.redirect($url, $statusCode=303) -> null","runRoute":"Web.runRoute($url) -> null","sendError":"Output.sendError($errorCode, $title='', $descriptionHtml='') -> null","sendHtml":"Output.sendHtml($htmlOrList) -> null","sendJson":"Output.sendJson($map, $expirationSecs=0) -> null","sendPage":"Output.sendPage($page) -> null","sendText":"Output.sendText($bodyString, $expirationSecs=0) -> null","setCacheHeader":"Output.setCacheHeader($expirationSecs) -> null","setHeader":"Output.setHeader($name, $value, $options={}) -> null","setResponseCode":"Output.setResponseCode($code) -> null","xDangerSend":"Output.xDangerSend($string) -> null"},"Page":{"addBodyClass":"$page.addBodyClass($className) -> self","addCss":"$page.addCss($urlOrCss) -> self","addJs":"$page.addJs($urlOrJs) -> self","addToHead":"$page.addToHead($html) -> self","create":"Page.create($fieldMap) -> Page","setBody":"$page.setBody($html) -> self","setDescription":"$page.setDescription($value) -> self","setFooter":"$page.setFooter($html) -> self","setHeader":"$page.setHeader($html) -> self","setIcon":"$page.setIcon($url) -> self","setImage":"$page.setImage($url) -> self","setMain":"$page.setMain($html) -> self","setTitle":"$page.setTitle($value) -> self"},"Password":{"check":"$password.check($correctHash) -> boolean","checkPattern":"$password.checkPattern($regex) -> boolean","length":"$password.length() -> number","xDangerHash":"$password.xDangerHash() -> string","xDangerPlainText":"$password.xDangerPlainText() -> string"},"Perf":{"isActive":"Perf.isActive() -> boolean","now":"Perf.now() -> number","start":"Perf.start($taskId, $detail='') -> null","stop":"Perf.stop() -> number"},"Php":{"call":"Php.call($functionName, $arg1, $arg2, ...) -> any","classExists":"Php.classExists($phpClassName) -> boolean","functionExists":"Php.functionExists($phpFunctionName) -> boolean","getConstant":"Php.getConstant($constantName) -> any","getVersion":"Php.getVersion($options={}) -> string|number","new":"Php.new($phpClassName, $arg1, $arg2, ...) -> object","options":"Php.options($string) -> number","require":"Php.require($phpFile) -> null"},"Request":{"getHeaders":"Request.getHeaders() -> map","getIp":"Request.getIp($options={}) -> string|list","getLanguages":"Request.getLanguages() -> list","getMethod":"Request.getMethod() -> string","getReferrer":"Request.getReferrer() -> string","getUrl":"Request.getUrl() -> Url","getUserAgent":"Request.getUserAgent() -> string","isAjax":"Request.isAjax() -> boolean","isHttps":"Request.isHttps() -> boolean","printInfo":"Request.printInfo() -> null"},"Result":{"fail":"Result.fail($failCode='general') -> Result","get":"$r.get() or $r.get($defaultValue) -> any","getFailCode":"$r.getFailCode() -> string","isOk":"$r.isOk() -> boolean","ok":"Result.ok($value) -> Result"},"Session":{"addCounter":"Session.addCounter($key) -> number","addToList":"Session.addToList($key, $value) -> list","delete":"Session.delete($key) -> null","deleteAll":"Session.deleteAll() -> null","get":"Session.get($key, $default='') -> any","getAll":"Session.getAll() -> map","getFlash":"Session.getFlash($key, $default='') -> any","hasFlash":"Session.hasFlash($key) -> boolean","repeatFlash":"Session.repeatFlash() -> null","set":"Session.set($key, $value) -> null","setFlash":"Session.set($key, $value) -> null"},"String":{"append":"append($rightString) -> string","charList":"String.charList($listId) -> list","charToUnicode":"charToUnicode() -> string","contains":"contains($matchString, $options={}) -> boolean","count":"count($matchString, $options={}) -> number","endsWith":"endsWith($matchString, $options={}) -> boolean","ensureLeft":"ensureLeft($prefix) -> string","ensureRight":"ensureRight($suffix) -> string","ensureWrap":"ensureWrap($prefix, $suffix) -> string","fill":"fill($value0, $value1, ...) -> string","fingerprint":"fingerprint($algo='sha256') -> string","fromBytes":"fromBytes() -> string","fromEncoding":"fromEncoding($encoding) -> string","getChar":"getChar($index) -> string","indexOf":"indexOf($matchString, $options={}) -> number","isAscii":"isAscii() -> boolean","isEmpty":"isEmpty() -> boolean","isLowerCase":"isLowerCase() -> boolean","isNumeric":"isNumeric() -> boolean","isUpperCase":"isUpperCase() -> boolean","lastIndexOf":"lastIndexOf($substring, $options={}) -> number","lastReplaceCount":"String.lastReplaceCount() -> number","left":"left($length) -> string","length":"length() -> number","limit":"limit($numCharacters, $ending='…') -> string","match":"match($regexPattern, $groupNames='') -> string|map","matchAll":"matchAll($regexPattern, $groupNames='') -> list","padBoth":"padBoth($length, $padString=' ') -> string","padLeft":"padLeft($length, $padString=' ') -> string","padRight":"padRight($length, $padString=' ') -> string","prepend":"prepend($leftString) -> string","randomToken":"String.randomToken($numChars) -> string","removeLeft":"removeLeft($prefix) -> string","removeRight":"removeRight($suffix) -> string","removeWrap":"removeWrap($prefix, $suffix) -> string","replace":"replace($find, $replace, $options={}) -> string","replaceChars":"replaceChars($fromChars, $toChars) -> string","reverse":"reverse() -> string","right":"right($length) -> string","scrambleId":"String.scrambleId($plainNum) -> string","setChar":"setChar($index, $newChar) -> self","split":"split($stringOrRegex, $options={}) -> list","splitChars":"splitChars() -> list","splitLines":"splitLines($options={}) -> list","splitWords":"splitWords($options={}) -> list","startsWith":"startsWith($matchString, $options={}) -> boolean","substring":"substring($startIndex, { numChars|toIndex }) -> string","toAscii":"toAscii() -> string","toBoolean":"toBoolean() -> boolean","toBytes":"toBytes() -> list","toCivilized":"toCivilized($textType='comment') -> string","toEncoding":"toEncoding($encoding) -> string","toHumanized":"toHumanized() -> string","toLowerCase":"toLowerCase($options={}) -> string","toNumber":"toNumber() -> number","toPlural":"toPlural($quantity=2, $pluralWord='') -> string","toTitleCase":"toTitleCase() -> string","toTokenCase":"toTokenCase($joiner, $options={}) -> string","toUpperCase":"toUpperCase($options={}) -> string","toUrlSlug":"toUrlSlug($skipWords='') -> string","trim":"trim($trimChars='') -> string","trimIndent":"trimIndent($options={}) -> string","trimLeft":"trimLeft($trimChars='') -> string","trimLines":"trimLines() -> string","trimRight":"trimRight($trimChars='') -> string","unicodeToChar":"String.unicodeToChar($code) -> string","unscrambleId":"String.unscrambleId($scrambledId) -> string","xDangerToType":"xDangerToType($stringType) -> TypeString"},"System":{"exit":"System.exit($returnCode=0) -> null","getEnvVar":"System.getEnvVar($variableName, $default='') -> any","getOs":"System.getOs() -> string","setMaxMemoryMb":"System.setMaxMemoryMb($maxMemoryMb) -> null","setMaxRunTimeSecs":"System.setMaxRunTimeSecs($maxRunTimeSecs) -> null","sleep":"System.sleep($timeMilliseconds) -> null"},"Test":{"dies":"$t.dies($anonFunction, $description) -> self","ok":"$t.ok($assertion, $description) -> self","resultsHtml":"$t.resultsHtml() -> HtmlString","section":"$t.section($title) -> self","shake":"$t.shake($var) -> boolean","stats":"$t.stats() -> map","todo":"$t.todo($description) -> self"},"TypeString":{"append":"append($otherTypeString) -> self","fill":"fill($value0, $value1, ...) -> self","renderString":"renderString() -> string","stringType":"stringType() -> string"},"Url":{"appendPath":"appendPath($pathElement) -> string","appendSlug":"appendSlug($pageTitle, $skipWords='') -> string","clearQuery":"clearQuery() -> self","getFilePath":"getFilePath() -> string","getHash":"getHash() -> string","getHost":"getHost() -> string","getOrigin":"getOrigin() -> string","getPath":"getPath() -> string","getPathParts":"getPathParts() -> list","getPort":"getPort() -> number","getQuery":"getQuery() -> UrlQuery","isAbsolute":"isAbsolute() -> boolean","isLocal":"isLocal() -> boolean","isRelative":"isRelative() -> boolean","isRemote":"isRemote() -> boolean","renderString":"renderString() -> string","setHash":"setHash($newHash) -> self","setHost":"setHost($newHost) -> self","setPath":"setPath($newPath) -> self","setPort":"setPort($newPort) -> self","setQuery":"setQuery($paramsMap) -> self","toAbsolute":"toAbsolute($newOrigin='') -> Url","toLink":"toLink($label, $params={}) -> HtmlString","toRelative":"toRelative() -> Url"},"UrlQuery":{"delete":"delete($fieldName) -> self","get":"get($paramName, $rule='id') -> any","getAll":"getAll($mapOfParams) -> map","getNames":"getNames() -> list","has":"has($fieldName) -> boolean","keep":"keep($listOfParams) -> self","renderString":"renderString() -> string","set":"set($mapOfParams) -> self","setDefault":"setDefault($mapOfParams) -> self","xDangerGetAll":"xDangerGetAll() -> map"},"Web":{"anchor":"Web.anchor($label, $options = {}) -> HtmlString","anchorUrl":"Web.anchorUrl($label, $options = {}) -> HtmlString","csrfToken":"Web.csrfToken() -> string","cssLink":"Web.cssLink($cssUrl) -> HtmlString","htmx":"Web.htmx($mode, $dataMap) -> HtmlString","icon":"Web.icon($iconName) -> HtmlString","jsLink":"Web.jsLink($jsUrl) -> HtmlString","nonce":"Web.nonce() -> string","postLink":"Web.postLink($label, $actionUrl, $dataMap, $class='') -> HtmlString"}}